syntax = "proto3";

package train;

message OptimizerType {
  enum Type {
    TYPE_UNKNOWN = 0;
    TYPE_GD = 1;
    TYPE_ADAM = 2;
    TYPE_NAG = 3;
  }
}

message Solver {
  int32 batch_size = 1;
  OptimizerType.Type optimizer_type = 2;
  float learning_rate = 3;
}

message LayerType {
  enum Type {
    TYPE_UNKNOWN = 0;
    TYPE_CONV_LAYER = 1;
    TYPE_POOL_LAYER = 2;
    TYPE_FC_LAYER = 3;
  }
}

message ActiveType {
  enum Type {
    TYPE_UNKNOWN = 0;
    TYPE_SIGMOID = 1;
    TYPE_RELU = 2;
    TYPE_SOFTMAX = 3;
    TYPE_LINEAR = 4;
  }
}

message FullConnectedLayer {
  string layer_name = 1;
  int32 unit_nums = 2;
  ActiveType.Type active_type = 3;
  float keep_prob = 4;
}

message ConvolutionType {
  enum Type {
    TYPE_UNKNOWN = 0;
    TYPE_CONV1D = 1;
    TYPE_CONV2D = 2;
    TYPE_CONV3D = 3;
    TYPE_CONV2D_TRANSPOSE = 4;
    TYPE_CONV3D_TRANSPOSE = 5;
    TYPE_DEPTHWISE_CONV2D = 6;
    TYPE_SEPARABLE_CONV2D = 7;
  }
}

message ConvolutionLayer {
  string layer_name = 1;
  ConvolutionType.Type conv_type = 2;
  int32 unit_nums = 3;
  repeated int32 kernel_shape = 4;
  repeated int32 stride_shape = 5;
  string padding_type = 6;
  string data_format = 7;
  ActiveType.Type active_type = 8;
}

message PoolType {
  enum Type {
    TYPE_UNKNOWN = 0;
    TYPE_AVG_POOL = 1;
    TYPE_MAX_POOL = 2;
    TYPE_AVG_POOL3D = 3;
    TYPE_MAX_POOL3D = 4;
  }
}

message PoolLayer {
  string layer_name = 1;
  PoolType.Type pool_type = 2;
  repeated int32 kernel_shape = 3;
  repeated int32 stride_shape = 4;
  string padding_type = 5;
  string data_format = 6;
}

message Layer {
  LayerType.Type layer_type = 1;
  FullConnectedLayer fc_layer = 2;
  ConvolutionLayer conv_layer = 3;
  PoolLayer pool_layer = 4;
}

message LossFunType {
  enum Type {
    TYPE_UNKNOWN = 0;
    TYPE_SIGMOID_XENTROPY = 1;
    TYPE_SOFTMAX_XENTROPY = 2;
    TYPE_SPARSE_SOFTMAX_XENTROPY = 3;
    TYPE_MSE = 4;
  }
}

message NetModel {
  Solver solver = 1;
  repeated Layer layer = 2;
  LossFunType.Type loss_fun_type = 3;
  bool gpu = 5;
  repeated int32 gup_id = 6;
}
