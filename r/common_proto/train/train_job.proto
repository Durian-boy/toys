syntax = "proto3";

package train;

import "common_proto/base/base.proto";
import "common_proto/train/net_model.proto";
import "common_proto/train/svm_model.proto";
import "common_proto/train/tree_model.proto";
import "common_proto/train/lr_model.proto";
import "common_proto/train/nb_model.proto";


message ResamplingType {
  enum Type {
    TYPE_UNKNOWN = 0;

    TYPE_OS_ADASYN = 1;
    TYPE_OS_RANDOM = 2;
    TYPE_OS_SMOTE = 3;

    TYPE_US_ALL_KNN = 4;
    TYPE_US_CC = 5;
    TYPE_US_CNN = 6;
    TYPE_US_ENN = 7;
    TYPE_US_IHT = 8;
    TYPE_US_NCR = 9;
    TYPE_US_NM = 10;
    TYPE_US_ONE_SIDED = 11;
    TYPE_US_RANDOM = 12;
    TYPE_US_RENN = 13;
    TYPE_US_TOMEK_LINKS = 14;
  }
}

message InputSchema {
  base.ReaderType.Type reader_type = 1;
  string file_name = 2;

  repeated string file_name = 3;
  base.IterSchema id_schema = 4;
  base.FeatureSchema feature_schema = 5;
  base.LabelSchema label_schema = 6;

  bool shuffle = 7;

  message DatasetSplit {
    float train_ratio = 1;
    float test_ratio = 2;
    float validation_ratio = 3;
  }

  DatasetSplit split_ratio = 8;
  bool resampling = 9;
  ResamplingType.Type resampling_type = 10;
}

message LearningSchema {
  base.MlLib.Name ml_lib_name = 1;
  base.Algorithm.Name algorith_name = 2;
  int32 iter_nums = 3;
  int32 max_train_time = 4;
  NetModel net_model = 5;
  SVMModel svm_model = 6;
  TreeModel tree_model = 7;
  LRModel lr_model = 8;
  NBModel nb_model = 9;
}

message OutputSchema {
  repeated base.EvaluateType.Type evaluate_type = 1;
  int32 evaluate_interval = 2;
  int32 model_save_interval = 3;
}

message TrainJob {
  string job_name = 1;
  string job_description = 2;
  bool init_job = 3;
  string job_id = 4;

  InputSchema input_schema = 5;
  LearningSchema learning_schema = 6;
  OutputSchema output_schema = 7;
}

message TrainJobId {
  string job_id = 1;
}

message TrainResponse {
  string job_id = 1;
  bool successful = 2;
}
